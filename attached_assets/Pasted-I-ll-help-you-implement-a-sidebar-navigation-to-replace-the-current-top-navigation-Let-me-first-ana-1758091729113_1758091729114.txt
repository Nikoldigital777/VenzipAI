I'll help you implement a sidebar navigation to replace the current top navigation. Let me first analyze the current navigation structure and then provide a comprehensive plan for this transition.

Decided on sidebar navigation implementation (7 seconds)
Perfect! I can see the current structure and what needs to be implemented. Let me provide you with a comprehensive plan for transitioning from the current top navigation to a sidebar layout.

Analysis of Current Structure
Current Navigation:

navigation.tsx - Horizontal top bar with glassmorphism effects
Contains: Onboarding, Dashboard, Tasks, Compliance Insights, Audit Calendar, Documents, Risks, Evidence Mapping, Learning Hub, Test Notifications
Mobile-responsive with collapsible menu
Integrated with wouter routing
Available Resources:

✅ Complete shadcn/ui sidebar.tsx component already exists with full functionality
✅ navigation-menu.tsx and tooltip.tsx components available
✅ Lucide React icons already imported and used
Implementation Plan
Phase 1: Create the New Sidebar Component
File: client/src/components/app-sidebar.tsx (New component using existing shadcn sidebar)

// Structure Overview:
- SidebarProvider wrapper
- SidebarHeader: Logo + user info
- SidebarContent: Navigation menu items  
- SidebarFooter: User actions (logout, profile)
- SidebarTrigger: Collapse/expand button
// Navigation Items (matching user requirements):
1. Dashboard (BarChart3 icon)
2. Tasks (CheckSquare icon) 
3. Evidence (FileText icon)
4. Risks (AlertTriangle icon)
5. Frameworks (Shield icon) - NEW
6. Documents (FolderOpen icon)
7. Audit Calendar (Calendar icon)
8. AI Chat (Bot icon)
9. Compliance Insights (Target icon)
10. Company Profile (User icon)
Phase 2: Update App Layout Structure
File: client/src/App.tsx

Wrap protected routes with SidebarProvider and new sidebar
Add SidebarInset for main content area
Keep landing/onboarding pages without sidebar
Maintain authentication logic
Phase 3: Update Individual Pages
Files: All protected page components

Remove individual <Navigation /> imports
Adjust layout classes (remove top padding for header)
Update content area to work within sidebar layout
Phase 4: Responsive Design Features
Desktop (≥768px):

Sidebar expanded by default (16rem width)
Collapsible to icon-only view (3rem width)
Keyboard shortcut (Ctrl/Cmd + B) to toggle
Mobile (<768px):

Sidebar as overlay drawer (18rem width)
Hamburger menu trigger in header area
Auto-closes on navigation
Phase 5: Enhanced Features
Sidebar State Management:

Persistent collapsed/expanded state via cookies
Smooth animations and transitions
Hover tooltips when collapsed
Visual Design:

Glassmorphism styling to match current design
Active state indicators
Gradient backgrounds for branding
Icons with hover animations
Technical Implementation Details
Key Components to Use:
SidebarProvider - Context and state management
SidebarTrigger - Toggle button
SidebarContent - Scrollable navigation area
SidebarMenu + SidebarMenuItem - Navigation items
SidebarMenuButton - Individual nav buttons
Tooltip - Hover tooltips when collapsed
Route Integration:
Use wouter's useLocation() for active states
Link components for navigation
Maintain current route structure
Styling Approach:
Extend existing Venzip color palette
Preserve glassmorphism effects
Smooth transitions and micro-interactions
Mobile-first responsive design
Migration Benefits
✅ Improved UX: More space for content, cleaner navigation
✅ Better Mobile Experience: Drawer-style navigation
✅ Enhanced Accessibility: Keyboard navigation, tooltips
✅ Consistent with Modern Apps: Sidebar is industry standard
✅ Scalable: Easy to add new navigation items
✅ Persistent State: Remembers user's collapse preference

Implementation Order
Create app-sidebar.tsx - New sidebar component using existing shadcn infrastructure
Update App.tsx - Integrate sidebar with routing
Update page components - Remove old navigation imports
Test responsive behavior - Desktop and mobile layouts
Polish animations and styling - Match existing design system